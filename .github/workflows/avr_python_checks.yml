name: Python Checks

on:
  workflow_call:

jobs:
  checks:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate .python-version
        shell: python
        run: |
          import os
          import sys

          if os.path.isfile(".python-version"):
              sys.exit(0)

          with open("Dockerfile", "r") as fp:
              lines = fp.readlines()

          python_version = None

          for line in lines:
              # Docker FROM statement
              if line.startswith("FROM") and "python" in line:
                  python_version = line.split(":")[1].strip()
                  if "-" in python_version:
                      python_version = python_version.split("-")[0]

              # Docker ENV statement
              if line.startswith("ENV") and "PYTHON_VERSION" in line:
                  if "=" in line:
                      python_version = line.split("=")[1].strip()
                  else:
                      python_version = line.split(" ")[2].strip()

          assert python_version is not None
          print(f"Found {python_version}")

          with open(".python-version", "w") as fp:
              fp.write(python_version)

      - name: Install poetry
        run: |
          python -m pip install pip wheel pipx --upgrade
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm

      - name: Install Python Dependencies
        run: poetry install

      - name: Install Node Dependencies
        run: npm install

      - name: Check Formatting
        run: poetry run python -m black ${{ github.workspace }} --check

      - name: Check Import Order
        run: poetry run python -m isort ${{ github.workspace }} --check

      - name: Check for Unused Imports
        run: poetry run python -m autoflake ${{ github.workspace }} --check

      - name: Check Type Hints
        run: poetry run python -m pyleft ${{ github.workspace }}

      - name: Check Typing
        run: npx pyright ${{ github.workspace }}

      - name: Linting
        run: poetry run python -m pflake8 ${{ github.workspace }}
